/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    lower_Disk: THREE.Mesh;
    upper_disk: THREE.Mesh;
  };
  materials: {
    ["Gray.002"]: THREE.MeshStandardMaterial;
    ["Gray.003"]: THREE.MeshStandardMaterial;
  };
};

export default function Discs(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF("/discs.glb") as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-1.34, 0.56, -0.93]} scale={0.1}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.lower_Disk.geometry}
          material={materials["Gray.002"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.upper_disk.geometry}
          material={materials["Gray.003"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/discs.glb");
