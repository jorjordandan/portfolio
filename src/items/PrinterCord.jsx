/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useStore } from "../state";

export default function PrinterCord(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/printerCord.glb");
  const powered = useStore((state) => state.printer.power);
  const playSound = useStore((state) => state.playSound);
  const {
    powerOnPrinter,
    setText,
    setButton,
    hideButton,
    desk: deskState,
  } = useStore();
  const { printText, texts } = props;

  const printerPlugClick = () => {
    deskState.up
      ? printText(texts.printerPlug.deskUp, "printerPlug")
      : printText(texts.printerPlug.deskDown, "printerPlug");

    if (deskState.up) {
      setButton({
        text: "Plug in 3d printer",
        click: powerOnPrinter,
        afterClick: () => {
          setText(["Okay all set."]);
          playSound("printerPower");
        },
        hideButton: hideButton,
      });
    }
  };

  const printerOutletClick = () => {
    deskState.up
      ? printText(texts.printerOutlet.visible, "printerOutlet")
      : printText(texts.printerOutlet.hidden, "printerOutlet");
  };

  return (
    <group ref={group} dispose={null}>
      {powered && (
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["3dPrinterPlugPluggedIn"].geometry}
          material={nodes["3dPrinterPlugPluggedIn"].material}
          position={[-0.86, 0.72, -1.22]}
        />
      )}
      {!powered && (
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["3dPrinterPlugFloor"].geometry}
          material={nodes["3dPrinterPlugFloor"].material}
          position={[-0.86, -0.01, -0.73]}
          rotation={[-Math.PI, 0, -Math.PI]}
          onClick={printerPlugClick}
        />
      )}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Outlet__0001.geometry}
        material={materials["Scene_-_Root"]}
        position={[-0.86, 0.74, -1.25]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.02}
        onClick={printerOutletClick}
      />
    </group>
  );
}
