/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { useStore } from '../state.js';

type GLTFResult = GLTF & {
  nodes: {
    Cube045: THREE.Mesh;
    Curve021: THREE.Mesh;
    Curve024: THREE.Mesh;
    Curve027: THREE.Mesh;
    Curve028: THREE.Mesh;
    Cylinder049: THREE.Mesh;
    Cylinder050: THREE.Mesh;
    hingle: THREE.Mesh;
    bottom_blocker: THREE.Mesh;
    center_pin: THREE.Mesh;
    Curve025: THREE.Mesh;
    Curve026_1: THREE.Mesh;
    Curve031: THREE.Mesh;
    Curve032_1: THREE.Mesh;
    lid: THREE.Mesh;
    rim: THREE.Mesh;
  };
  materials: {
    ['Material.006']: THREE.MeshStandardMaterial;
    Red: THREE.MeshStandardMaterial;
    Blue: THREE.MeshStandardMaterial;
    ['Material.007']: THREE.MeshStandardMaterial;
    ['Material.008']: THREE.MeshStandardMaterial;
    Gold: THREE.MeshStandardMaterial;
  };
};

export default function PuzzleBox(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  // console.log(props);
  const { texts, printText } = props;
  const { nodes, materials } = useGLTF('/puzzleBox.glb') as GLTFResult;
  const { collectPuzzle, hideButton, setButton, addToInventory, puzzle } =
    useStore();
  const handleClick = () => {
    printText(texts.puzzle);

    setButton({
      text: 'Collect box',
      click: collectPuzzle,
      afterClick: () =>
        printText([
          "You pick it up. It feels slightly warm. Actually, it doesn't... but it seems like the kind of thing you should say.",
        ]),
      hideButton: hideButton,
    });
    addToInventory('puzzle');
  };
  return (
    <>
      {puzzle.visible && (
        <group ref={group} {...props} dispose={null} onClick={handleClick}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube045.geometry}
            material={nodes.Cube045.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Curve021.geometry}
            material={nodes.Curve021.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Curve024.geometry}
            material={nodes.Curve024.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Curve027.geometry}
            material={nodes.Curve027.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Curve028.geometry}
            material={nodes.Curve028.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cylinder049.geometry}
            material={nodes.Cylinder049.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cylinder050.geometry}
            material={nodes.Cylinder050.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.hingle.geometry}
            material={nodes.hingle.material}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.bottom_blocker.geometry}
              material={nodes.bottom_blocker.material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.center_pin.geometry}
              material={nodes.center_pin.material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Curve025.geometry}
              material={nodes.Curve025.material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Curve026_1.geometry}
              material={nodes.Curve026_1.material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Curve031.geometry}
              material={nodes.Curve031.material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Curve032_1.geometry}
              material={nodes.Curve032_1.material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.lid.geometry}
              material={nodes.lid.material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.rim.geometry}
              material={nodes.rim.material}
            />
          </mesh>
        </group>
      )}
    </>
  );
}

useGLTF.preload('/puzzleBox.glb');
